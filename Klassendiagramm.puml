@startuml
class Administrator{
- personal_nummer: int
- abteilung: str

+ add_verdampfer(produktbezeichnung: str, preis: float, hersteller: str, durchmesser: float, hoehe: float, fuellsystem: str)
+ add_verdampferkopf(produktbezeichnung: str, preis: float, hersteller: str, drahtmaterial: str, wiederstand: float)
+ add_akkutaeger(produktbezeichnung: str, preis: float, hersteller: str, funktionsweise: str, hoehe: float, breite: float, akkutyp: str)
+ add_set(produktbezeichnung: str, preis: float, hersteller: str, akkutraeger_id: int, verdampfer_id: int, verdampferkopf_id: int)
+ add_admin(benutzername: str, passwort: str, personalnummer: str, abteilung: str)
+ define_matching(verdampfer_id: int, verdampferkopf_id: int)
- einloggen()
 -save_to_prod_db(produktbezeichnung: str, preis: float, hersteller: str) -> int:
}

class Benutzer{
- passwort: str
# benutzername: str
# db_path: str
# login_status: bool
# benutzer_id: int

ausloggen()
_benutzer_einloggen()
_check_verfuegbar_benutzername(name_to_check: str) -> bool:
}

class Kunde{
- warenhaus: Warenhaus
- nachname: str
- adressen: Adresse [0..*]
- bankverbindungen: Bankverbindung [0..*]
- warenkorb: Bestellung
- bestellhistorie: Bestellung [0..*]

+ add_adresse(strasse: str, hausnummer: int, plz: str, stadt: str) -> None:
+ show_adressen() -> None:
+ delete_adresse(adress_id: int) -> None:
+ add_bankverbindung(kontoinhaber: str, iban: str, bic: str) -> None:
+ show_bankverbindungen() -> None:
+ delete_bankverbindungen(bank_id: int) -> None:
+ add_to_warenkorb(produkt_id: int, menge: int) -> None:
+ show_warenkorb() -> None:
+ delete_from_warenkorb(produkt_id: int) -> None:
+ add_to_warenkorb(produkt_id: int, menge: int) -> None:
+ show_warenkorb() -> None:
+ delete_from_warenkorb(produkt_id: int) -> None:
+ bestellung_aufgeben(adress_id: int, bank_id: int) -> None:
+ show_kundendaten() -> None:
+ update_kundendaten(vorname=None, nachname=None) -> None:
+ delete_kundendaten() -> None:
- einloggen() -> None:
- create_new_account() -> None:
- get_adressen_from_db() -> None:
- get_bankinfo_from_db() -> None:
- get_bestellungen_from_db() -> None:
- neuer_warenkorb() -> Bestellung:
}

class Adresse{
- adress_id: int
- strasse: str
- hausnummer: int
- plz: str
- stadt: str

+ def get_adressinfo() -> str:
}

class Bankverbindung{
- kontoinhaber: str
- iban: str
- bic: str
- bank_id: int

+ get_bankinfo() -> str:
+ get_id() -> int:
}

class Bestellung{
- warenhaus
- bestell_id: int
- bestelldatum: date
- bestellstatus: str
- bestellposten: Bestellposten
- db_path: str

+ add_bestellposten(produkt_id: int, menge: int) -> None:
+ show_bestellposten() -> str:
+ delete_bestellposten(produkt_id: int) -> None:
+ save_to_db(benutzer_id: int, adress_id: int, bank_id: int) -> None:
- get_bestellposten_from_db() -> None:
}

class Bestellposten{
- warenhaus: Warenhaus
- posten_id: int
- produkt_id: int
- menge: int
- db_path: str

+ get_total(self) -> float:
+ get_info(self) -> str:
+ get_produkt_id(self) -> int:
+ save_to_db(self, bestell_id: int) -> None:
}


@enduml